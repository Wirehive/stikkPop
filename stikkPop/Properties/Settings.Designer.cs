//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stikkPop.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string endpoint {
            get {
                return ((string)(this["endpoint"]));
            }
            set {
                this["endpoint"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string syntax {
            get {
                return ((string)(this["syntax"]));
            }
            set {
                this["syntax"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string name {
            get {
                return ((string)(this["name"]));
            }
            set {
                this["name"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("html5, css, javascript, php, python, ruby, lua, bash, erlang, go, c, cpp, diff, l" +
            "atex, sql, xml, text, 0, 4cs, 6502acme, 6502kickass, 6502tasm, 68000devpac, abap" +
            ", actionscript, actionscript3, ada, algol68, apache, applescript, apt_sources, a" +
            "sm, asp, autoconf, autohotkey, autoit, avisynth, awk, bascomavr, basic4gl, bf, b" +
            "ibtex, blitzbasic, bnf, boo, c_loadrunner, c_mac, caddcl, cadlisp, cfdg, cfm, ch" +
            "aiscript, cil, clojure, cmake, cobol, coffeescript, csharp, cuesheet, d, dcs, de" +
            "lphi, div, dos, dot, e, ecmascript, eiffel, email, epc, euphoria, f1, falcon, fo" +
            ", fortran, freebasic, fsharp, gambas, gdb, genero, genie, gettext, glsl, gml, gn" +
            "uplot, groovy, gwbasic, haskell, hicest, hq9plus, html4strict, icon, idl, ini, i" +
            "nno, intercal, io, j, java, java5, jquery, klonec, klonecpp, lb, lisp, llvm, loc" +
            "obasic, logtalk, lolcode, lotusformulas, lotusscript, lscript, lsl2, m68k, magik" +
            "sf, make, mapbasic, matlab, mirc, mmix, modula2, modula3, mpasm, mxml, mysql, ne" +
            "wlisp, nsis, oberon2, objc, objeck, ocaml, oobas, oracle11, oracle8, oxygene, oz" +
            ", pascal, pcre, per, perl, perl6, pf, pic16, pike, pixelbender, pli, plsql, post" +
            "gresql, povray, powerbuilder, powershell, proftpd, progress, prolog, properties," +
            " providex, purebasic, q, qbasic, rails, rebol, reg, robots, rpmspec, rsplus, sas" +
            ", scala, scheme, scilab, sdlbasic, smalltalk, smarty, systemverilog, tcl, terate" +
            "rm, thinbasic, tsql, typoscript, unicon, uscript, vala, vb, vbnet, verilog, vhdl" +
            ", vim, visualfoxpro, visualprolog, whitespace, whois, winbatch, xbasic, xorg_con" +
            "f, xpp, yaml, z80, zxbasic ")]
        public string availableSyntax {
            get {
                return ((string)(this["availableSyntax"]));
            }
            set {
                this["availableSyntax"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool alwaysPrivate {
            get {
                return ((bool)(this["alwaysPrivate"]));
            }
            set {
                this["alwaysPrivate"] = value;
            }
        }
    }
}
